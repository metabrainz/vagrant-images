file_to_disk = './tmp/postgres_disk.vdi'

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/trusty64"
  config.vm.hostname = "musicbrainzvm"

  config.vm.provider :vmware_fusion do |v, override|
    override.vm.box_url = "http://files.vagrantup.com/precise64_vmware.box"
    override.vm.box = "precise64_vmware.box"
  end

  config.vm.network :forwarded_port, guest: 5000, host: 5000

  config.vm.provision :chef_solo do |chef|
    chef.version = "12.3.0"
    chef.cookbooks_path = "../cookbooks"
    chef.log_level = :debug

    chef.json = {
      "authorization" => {
          "sudo" => {
            "users" => [ "vagrant" ],
            "passwordless" => true,
            "include_sudoers_d" => true
          }
      },
      "musicbrainz-server" => {
        :revision => "master",
        :dbdefs => {
          :catalyst_debug => false,
          :development_server => true,
          :databases => {
            :READWRITE => {
              :database => "musicbrainz",
              :username => "musicbrainz",
              :schema => "musicbrainz"
            },
            :READONLY => {
              :database => "musicbrainz",
              :username => "musicbrainz",
              :schema => "musicbrainz"
            },
            :SYSTEM => {
              :database => 'template1',
              :username => 'postgres'
            }
          },
          :db_schema_sequence => 22,
          :replication_type => :rt_slave,
          :lucene_server => "localhost:8080"
        }
      }
    }

    chef.add_recipe "apt"
    chef.add_recipe "redisio"
    chef.add_recipe "postgresql"
    chef.add_recipe "memcached"
    chef.add_recipe "musicbrainz-server::dev"
    chef.add_recipe "musicbrainz-server::slave"
    chef.add_recipe "search-server"
    chef.add_recipe "virtual-machine"
  end
end
